// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// match_approx_cpp
Rcpp::IntegerVector match_approx_cpp(Rcpp::NumericVector x, Rcpp::NumericVector table, int nomatch, Rcpp::NumericVector tolerance);
RcppExport SEXP _Spectra_match_approx_cpp(SEXP xSEXP, SEXP tableSEXP, SEXP nomatchSEXP, SEXP toleranceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type table(tableSEXP);
    Rcpp::traits::input_parameter< int >::type nomatch(nomatchSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type tolerance(toleranceSEXP);
    rcpp_result_gen = Rcpp::wrap(match_approx_cpp(x, table, nomatch, tolerance));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Spectra_match_approx_cpp", (DL_FUNC) &_Spectra_match_approx_cpp, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_Spectra(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
