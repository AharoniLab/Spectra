% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions-util.R
\name{matchApprox}
\alias{matchApprox}
\title{Match values given a user defined tolerance}
\usage{
matchApprox(x, table = numeric(), nomatch = NA_integer_,
  tolerance = 0)
}
\arguments{
\item{x}{`numeric` with values to match against `table`.}

\item{table}{`numeric` with the values to be matched against.}

\item{nomatch}{`integer(1)` with the value to be returned in case when no
match is found.}

\item{tolerance}{`numeric` defining the maximal acceptable difference between
values in `x` and `table` to consider values to be equal (i.e. match).
Can be either of length `1` or `length(x)`. See description and examples
for details.}
}
\value{
`integer` of length equal to `length(x)` with the indices in `table`
    where values in `x` match.
}
\description{
`matchApprox` allows to match numeric values/vectors accepting differences
defined by parameter `tolerance`. The function supports `tolerance` of
length 1 to use the same tolerance value for all comparison, or of length
equal `length(x)` to use value-specific tolerance (e.g. for matching with
parts-per-million *ppm*). See examples for more details.
}
\note{
Similar to the `all.equal.numeric` function a value of
`sqrt(.Machine$double.eps)` is added to each `tolerance`.
}
\examples{

## Define two vectors to match
x <- c(1.11, 45.02, 556.45)
y <- c(3.01, 34.12, 45.021, 46.1, 556.449)

## Elements do not match exactly
match(x, y)
matchApprox(x, y)

## Using a single tolerance value
matchApprox(x, y, tolerance = 0.01)

## Using a value-specific tolerance accepting differences of 20 ppm
matchApprox(x, y, tolerance = x * 20 / 1e6)

## Same using 50ppm
matchApprox(x, y, tolerance = x * 50 / 1e6)
}
\author{
Johannes Rainer
}
